kubectl get pods -o=wide
kubectl get nodes -o=wide
kubectl describe node <node name>
kubectl get all
kubectl get all -A
kubectl delete pod nginx
kubectl get deploy
kubectl get rs
kubectl get clusterrolebinding <your-user>
kubectl get rolebinding -n <namespace>
k get pods -w  --> realtime insights on what is happening on the pods
kubectl config set-context --current --namespace=monitoring
kubectl get pvc -n monitoring
kubectl get pv
kubectl get storageclass
kubectl patch pvc prometheus-server -n monitoring -p '{"spec":{"volumeName":"prometheus-server-pv-new"}}'
k get all -A -o yaml > backup.yaml


ETCD BACKUP config file :

/etc/kubernetes/manifests/etcd.yaml

command :

etcdctl --endpoints=https://127.0.0.1:2379 --cacert="/etc/kubernetes/pki/etcd/ca.crt" --cert="/etc/kubernetes/pki/etcd/server.crt" --key="/etc/kubernetes/pki/etcd/server.key" snapshot save /root/etcd.db

To view the output of the db

etcdctl --write-out="table" snapshot status /root/etcd.db

what is pv and pvc binding on pv and storage class

nginx.yaml

apiVersion: v1
kind: Pod
metadata:
  name: nginx
spec:
  containers:
  - name: nginx
    image: nginx:1.14.2
    ports:
    - containerPort: 80

deployment.YAML


apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.14.2
        ports:
        - containerPort: 80
